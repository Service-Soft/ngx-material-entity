{
    "root": true,
    "overrides": [
        {
            "files": [
                "*.ts"
            ],
            "parserOptions": {
                "project": [
                    "tsconfig.json"
                ],
                "createDefaultProgram": true
            },
            "extends": [
                "plugin:@angular-eslint/recommended",
                "plugin:@angular-eslint/template/process-inline-templates",
                "plugin:jsdoc/recommended"
            ],
            "rules": {
                "function-call-argument-newline": [
                    "warn",
                    "consistent"
                ],
                "@angular-eslint/component-selector": [
                    "warn",
                    {
                        "style": "kebab-case",
                        "type": "element",
                        "prefix": "ngx-mat-entity"
                    }
                ],
                "@angular-eslint/directive-selector": [
                    "warn",
                    {
                        "prefix": "app",
                        "style": "camelCase",
                        "type": "attribute"
                    }
                ],
                "@angular-eslint/no-empty-lifecycle-method": "warn",
                "@typescript-eslint/explicit-function-return-type": [
                    "warn",
                    {
                        "allowExpressions": true
                    }
                ],
                "@typescript-eslint/no-explicit-any": "warn",
                "@typescript-eslint/no-unused-vars": "warn",
                "@typescript-eslint/array-type": "warn",
                "@typescript-eslint/explicit-member-accessibility": [
                    "warn",
                    {
                        "accessibility": "no-public"
                    }
                ],
                "@typescript-eslint/no-empty-interface": "warn",
                "@typescript-eslint/class-literal-property-style": "warn",
                "@typescript-eslint/consistent-type-assertions": "warn",
                "@typescript-eslint/member-delimiter-style": [
                    "warn",
                    {
                        "multiline": {
                            "delimiter": "comma",
                            "requireLast": false
                        },
                        "singleline": {
                            "delimiter": "comma",
                            "requireLast": false
                        }
                    }
                ],
                "@typescript-eslint/member-ordering": [
                    "warn",
                    {
                        "default": [
                            "field",
                            "constructor",
                            "method"
                        ]
                    }
                ],
                "@typescript-eslint/method-signature-style": "warn",
                "@typescript-eslint/naming-convention": [
                    "warn",
                    {
                        "selector": "enum",
                        "format": [
                            "PascalCase"
                        ]
                    }
                ],
                "@typescript-eslint/no-base-to-string": "warn",
                "@typescript-eslint/no-confusing-non-null-assertion": "warn",
                "@typescript-eslint/no-dynamic-delete": "warn",
                "@typescript-eslint/no-extra-non-null-assertion": "warn",
                "@typescript-eslint/no-implicit-any-catch": "off",
                "@typescript-eslint/no-misused-new": "warn",
                "@typescript-eslint/no-misused-promises": "off",
                "@typescript-eslint/no-require-imports": "warn",
                "@typescript-eslint/no-unnecessary-boolean-literal-compare": "warn",
                "@typescript-eslint/no-unnecessary-qualifier": "warn",
                "@typescript-eslint/no-unnecessary-type-assertion": "warn",
                "@typescript-eslint/no-unsafe-argument": "warn",
                "@typescript-eslint/no-unsafe-assignment": "warn",
                "@typescript-eslint/no-unsafe-member-access": "warn",
                "@typescript-eslint/no-unsafe-return": "warn",
                "@typescript-eslint/no-var-requires": "warn",
                "@typescript-eslint/prefer-for-of": "warn",
                "@typescript-eslint/prefer-includes": "warn",
                "@typescript-eslint/prefer-literal-enum-member": "warn",
                "@typescript-eslint/prefer-readonly": "warn",
                "@typescript-eslint/promise-function-async": [
                    "warn",
                    {
                        "checkArrowFunctions": false
                    }
                ],
                "@typescript-eslint/restrict-plus-operands": "warn",
                "no-duplicate-imports": "warn",
                "prefer-const": "warn",
                "prefer-arrow-callback": "warn",
                "no-unused-expressions": "warn",
                "no-unused-labels": "warn",
                "no-trailing-spaces": "warn",
                "no-array-constructor": "warn",
                "no-console": "warn",
                "no-const-assign": "warn",
                "eol-last": [
                    "warn",
                    "never"
                ],
                "brace-style": [
                    "warn",
                    "stroustrup",
                    {
                        "allowSingleLine": false
                    }
                ],
                "array-bracket-newline": [
                    "warn",
                    "consistent"
                ],
                "array-element-newline": [
                    "warn",
                    "consistent"
                ],
                "curly": "warn",
                "keyword-spacing": "warn",
                "quotes": [
                    "warn",
                    "single"
                ],
                "max-len": [
                    "warn",
                    {
                        "code": 140,
                        "ignorePattern": "^import .*"
                    }
                ],
                "indent": [
                    "warn",
                    4,
                    {
                        "SwitchCase": 1,
                        "ignoredNodes": [
                            "FunctionExpression > .params[decorators.length > 0]",
                            "FunctionExpression > .params > :matches(Decorator, :not(:first-child))",
                            "ClassBody.body > PropertyDefinition[decorators.length > 0] > .key"
                        ]
                    }
                ],
                // jsdoc
                "jsdoc/check-access": 1,
                "jsdoc/check-alignment": 1,
                "jsdoc/check-examples": "off",
                "jsdoc/check-indentation": 1,
                "jsdoc/check-line-alignment": 1,
                "jsdoc/check-param-names": 1,
                "jsdoc/check-property-names": 1,
                "jsdoc/check-syntax": 1,
                "jsdoc/check-tag-names": 1,
                "jsdoc/check-types": 1,
                "jsdoc/check-values": 1,
                "jsdoc/empty-tags": 1,
                "jsdoc/implements-on-classes": 1,
                "jsdoc/match-description": 1,
                "jsdoc/multiline-blocks": 1,
                "jsdoc/newline-after-description": 1,
                "jsdoc/no-bad-blocks": 1,
                "jsdoc/no-defaults": 1,
                "jsdoc/no-missing-syntax": "off",
                "jsdoc/no-multi-asterisks": 1,
                "jsdoc/no-restricted-syntax": "off",
                "jsdoc/no-types": 1,
                "jsdoc/no-undefined-types": 1,
                "jsdoc/require-asterisk-prefix": 1,
                "jsdoc/require-description": 1,
                "jsdoc/require-description-complete-sentence": "warn",
                "jsdoc/require-example": "off",
                "jsdoc/require-file-overview": "off",
                "jsdoc/require-hyphen-before-param-description": 1,
                "jsdoc/require-jsdoc": 1,
                "jsdoc/require-param": 1,
                "jsdoc/require-param-description": 1,
                "jsdoc/require-param-name": 1,
                "jsdoc/require-param-type": "off",
                "jsdoc/require-property": 1,
                "jsdoc/require-property-description": 1,
                "jsdoc/require-property-name": 1,
                "jsdoc/require-property-type": 1,
                "jsdoc/require-returns": 1,
                "jsdoc/require-returns-check": 1,
                "jsdoc/require-returns-description": 1,
                "jsdoc/require-returns-type": "off",
                "jsdoc/require-throws": 1,
                "jsdoc/require-yields": 1,
                "jsdoc/require-yields-check": 1,
                "jsdoc/tag-lines": 1,
                "jsdoc/valid-types": 1
            }
        },
        {
            "files": [
                "*.html"
            ],
            "extends": [
                "plugin:@angular-eslint/template/recommended"
            ],
            "rules": {
                "@angular-eslint/template/eqeqeq": "warn",
                "@angular-eslint/template/conditional-complexity": "warn",
                // TODO enable and fix code
                // "@angular-eslint/template/cyclomatic-complexity": "warn",
                "@angular-eslint/template/i18n": [
                    "off",
                    {
                        "checkId": true,
                        "checkText": true,
                        "checkAttributes": true
                    }
                ],
                "@angular-eslint/template/no-distracting-elements": "warn",
                "@angular-eslint/template/no-duplicate-attributes": "warn",
                "@angular-eslint/template/no-negated-async": "warn"
            }
        }
    ]
}